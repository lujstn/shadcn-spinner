{
  "name": "spinner",
  "type": "registry:ui",
  "dependencies": [
    "@radix-ui/react-slot",
    "class-variance-authority"
  ],
  "files": [
    {
      "path": "ui/spinner.tsx",
      "content": "import * as React from \"react\";\r\nimport { Slot } from \"@radix-ui/react-slot\";\r\nimport { cva, type VariantProps } from \"class-variance-authority\";\r\nimport { cn } from \"@/lib/utils\";\r\n\r\nconst spinnerVariants = cva(\r\n  \"relative block opacity-[0.65]\",\r\n  {\r\n    variants: {\r\n      size: {\r\n        sm: \"w-4 h-4\",\r\n        md: \"w-6 h-6\",\r\n        lg: \"w-8 h-8\",\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      size: \"sm\",\r\n    },\r\n  }\r\n);\r\n\r\nexport interface SpinnerProps\r\n  extends React.HTMLAttributes<HTMLSpanElement>,\r\n  VariantProps<typeof spinnerVariants> {\r\n  loading?: boolean;\r\n  asChild?: boolean;\r\n}\r\n\r\nconst Spinner = React.forwardRef<HTMLSpanElement, SpinnerProps>(\r\n  ({ className, size, loading = true, asChild = false, ...props }, ref) => {\r\n    const Comp = asChild ? Slot : \"span\";\r\n\r\n    const [bgColorClass, filteredClassName] = React.useMemo(() => {\r\n      const bgClass = className?.match(/(?:dark:bg-|bg-)[a-zA-Z0-9-]+/g) || [];\r\n      const filteredClasses = className?.replace(/(?:dark:bg-|bg-)[a-zA-Z0-9-]+/g, \"\").trim();\r\n\r\n      return [bgClass, filteredClasses];\r\n    }, [className]);\r\n\r\n    if (!loading) return null;\r\n\r\n    return (\r\n      <Comp\r\n        className={cn(spinnerVariants({ size, className: filteredClassName }))}\r\n        ref={ref}\r\n        {...props}\r\n      >\r\n        {Array.from({ length: 8 }).map((_, i) => (\r\n          <span\r\n            key={i}\r\n            className=\"absolute top-0 left-1/2 w-[12.5%] h-full animate-spinner-leaf-fade\"\r\n            style={{\r\n              transform: `rotate(${i * 45}deg)`,\r\n              animationDelay: `${-(7 - i) * 100}ms`,\r\n            }}\r\n          >\r\n            <span\r\n              className={cn(\"block w-full h-[30%] rounded-full\", bgColorClass)}\r\n            ></span>\r\n          </span>\r\n        ))}\r\n      </Comp>\r\n    );\r\n  }\r\n);\r\n\r\nSpinner.displayName = \"Spinner\";\r\n\r\nexport { Spinner };\r\n",
      "type": "registry:ui",
      "target": ""
    }
  ],
  "tailwind": {
    "config": {
      "theme": {
        "extend": {
          "keyframes": {
            "spinner-leaf-fade": {
              "0%, 100%": {
                "opacity": "0"
              },
              "50%": {
                "opacity": "1"
              }
            }
          },
          "animation": {
            "spinner-leaf-fade": "spinner-leaf-fade 800ms linear infinite"
          }
        }
      }
    }
  }
}